# This is a basic workflow to help you get started with Actions

name: Publish Docker Dind Debian Artifact

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Set outputs
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build docker images
        run: |
          cd dind-docker-debian/
          docker build --rm --force-rm --tag debian/dind:main-${{ steps.vars.outputs.sha_short }} .
          docker images
          cd ..
          docker save debian/dind-debian:${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }} | xz -9e -T 2 -vv -c - > debian-dind-debian-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}.tar.xz
          echo "Build terminata"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name:  debian-dind-debian-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}.tar.xz
          release_name:  debian-dind-debian-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}.tar.xz
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./debian-dind-debian-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}.tar.xz
          asset_name: debian-dind-debian-${{ github.ref_name }}-${{ steps.vars.outputs.sha_short }}.tar.xz
          asset_content_type: application/x-xz